/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.23.6'
    //id 'com.github.johnrengelman.shadow'

}
javafx {
    version = "17"
    modules = [ 'javafx.controls','javafx.graphics', 'javafx.base', 'javafx.fxml' , 'javafx.media']
}
jar{
    manifest{
        attributes 'Main-Class' : 'io.fp.FXMLVorlesung.App'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    //compile 'com.jfoenix:jfoenix:9.0.10'
    //compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    //compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    //classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
}

application {
    // Define the main class for the application.
    mainClass = 'io.fp.FXMLVorlesung.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'io.fp.FXMLVorlesung.App'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
